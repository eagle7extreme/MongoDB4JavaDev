<html><head><title>Untitled document</title><meta content="text/html; charset=UTF-8" http-equiv="content-type"><style type="text/css">ol{margin:0;padding:0}.c9{color:#489b00;font-size:12pt;background-color:#ffffff}.c0{color:#615f5e;font-size:12pt;background-color:#ffffff}.c5{max-width:468pt;background-color:#ffffff;padding:72pt 72pt 72pt 72pt}.c1{color:#615f5e;background-color:#f8f8f8;font-family:"Verdana"}.c12{color:#6ba539;font-size:15pt;background-color:#ffffff}.c4{line-height:1.375;direction:ltr}.c3{color:inherit;text-decoration:inherit}.c2{line-height:1.4;direction:ltr}.c10{direction:ltr}.c7{font-style:italic}.c11{padding-bottom:11pt}.c6{height:11pt}.c8{font-weight:bold}.title{padding-top:0pt;line-height:1.15;text-align:left;color:#000000;font-size:21pt;font-family:"Trebuchet MS";padding-bottom:0pt}.subtitle{padding-top:0pt;line-height:1.15;text-align:left;color:#666666;font-style:italic;font-size:13pt;font-family:"Trebuchet MS";padding-bottom:10pt}li{color:#000000;font-size:11pt;font-family:"Arial"}p{color:#000000;font-size:11pt;margin:0;font-family:"Arial"}h1{padding-top:10pt;line-height:1.15;text-align:left;color:#000000;font-size:16pt;font-family:"Trebuchet MS";padding-bottom:0pt}h2{padding-top:10pt;line-height:1.15;text-align:left;color:#000000;font-size:13pt;font-family:"Trebuchet MS";font-weight:bold;padding-bottom:0pt}h3{padding-top:8pt;line-height:1.15;text-align:left;color:#666666;font-size:12pt;font-family:"Trebuchet MS";font-weight:bold;padding-bottom:0pt}h4{padding-top:8pt;line-height:1.15;text-align:left;color:#666666;font-size:11pt;text-decoration:underline;font-family:"Trebuchet MS";padding-bottom:0pt}h5{padding-top:8pt;line-height:1.15;text-align:left;color:#666666;font-size:11pt;font-family:"Trebuchet MS";padding-bottom:0pt}h6{padding-top:8pt;line-height:1.15;text-align:left;color:#666666;font-style:italic;font-size:11pt;font-family:"Trebuchet MS";padding-bottom:0pt}</style></head><body class="c5"><h2 class="c2 c11"><a name="h.9f93f6udxna6"></a><span class="c12">Homework: Homework 6.5</span></h2><p class="c4"><span class="c0">In this homework you will build a small replica set on your own computer. We will check that it works with </span><span class="c0 c7">validate.js</span><span class="c0">, which you should download in </span><span class="c9"><a class="c3" href="https://education.10gen.com/static/m101js-august-2013/handouts/hw6.0804c83c6a43.tar">hw6.tar</a></span><span class="c0">&nbsp;or </span><span class="c9"><a class="c3" href="https://education.10gen.com/static/m101js-august-2013/handouts/hw6.0d16303d520f.zip">hw6.zip</a></span><span class="c0">. </span></p><p class="c4 c6"><span class="c0"></span></p><p class="c4"><span class="c0">Create three directories for the three mongod processes. </span></p><p class="c4 c6"><span class="c0"></span></p><p class="c4"><span class="c0">On </span><span class="c0 c8">unix or mac</span><span class="c0">, this could be done as follows:</span></p><p class="c2"><span class="c1">mkdir -p /data/rs1 /data/rs2 /data/rs3<br></span></p><p class="c4"><span class="c0">Now start three mongo instances as follows. Note that are three commands. The browser is probably wrapping them visually.</span></p><p class="c2"><span class="c1">mongod --replSet m101 --logpath &quot;1.log&quot; --dbpath /data/rs1 --port 27017 --smallfiles --oplogSize 64 --fork <br>mongod --replSet m101 --logpath &quot;2.log&quot; --dbpath /data/rs2 --port 27018 --smallfiles --oplogSize 64 --fork<br>mongod --replSet m101 --logpath &quot;3.log&quot; --dbpath /data/rs3 --port 27019 --smallfiles --oplogSize 64 --fork<br></span></p><p class="c4"><span class="c0 c8">Windows users: </span><span class="c0">Omit </span><span class="c1">-p</span><span class="c0">&nbsp;from </span><span class="c1">mkdir</span><span class="c0">. Also omit </span><span class="c1">--fork</span><span class="c0">&nbsp;and use </span><span class="c1">start mongod</span><span class="c0">&nbsp;with Windows compatible paths (i.e. back slashes &quot;\&quot;) for the </span><span class="c1">--dbpath</span><span class="c0">&nbsp;argument (e.g;</span><span class="c1">C:\data\rs1</span><span class="c0">). </span></p><p class="c4 c6"><span class="c0"></span></p><p class="c4"><span class="c0">Now connect to a mongo shell and make sure it comes up</span></p><p class="c2"><span class="c1">mongo --port 27017<br></span></p><p class="c4"><span class="c0">Now you will create the replica set. Type the following commands into the mongo shell:</span></p><p class="c2"><span class="c1">config = { _id: &quot;m101&quot;, members:[<br> &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;{ _id : 0, host : &quot;localhost:27017&quot;},<br> &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;{ _id : 1, host : &quot;localhost:27018&quot;},<br> &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;{ _id : 2, host : &quot;localhost:27019&quot;} ]<br> &nbsp; &nbsp; &nbsp; &nbsp; };<br>rs.initiate(config);<br></span></p><p class="c4"><span class="c0">At this point, the replica set should be coming up. You can type</span></p><p class="c2"><span class="c1">rs.status()<br></span></p><p class="c4"><span class="c0">to see the state of replication. </span></p><p class="c4 c6"><span class="c0"></span></p><p class="c4"><span class="c0">Now run validate.js to confirm that it works.</span></p><p class="c2"><span class="c1">npm install</span></p><p class="c2"><span class="c1">node validate.js<br></span></p><p class="c10"><span class="c0">Validate connects to your local replica set and checks that it has three nodes. Type the validation code below.</span></p></body></html>